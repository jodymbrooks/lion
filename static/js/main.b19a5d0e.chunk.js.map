{"version":3,"sources":["actions/commonActions.js","utilities.js","actions/scoreActions.js","components/SharedStatus.js","components/UserScore.js","components/StatusArea.js","components/Card.js","components/Overlay.js","components/Table.js","DevTools.jsx","actions/commonReducer.js","actions/scoreReducer.js","actions/index.js","store.js","App.js","registerServiceWorker.js","index.js"],"names":["showOverlay","type","hideOverlay","utilities","tableCards","filter","card","faceDown","card1","card2","matches","firstTest","count","attrs","forEach","card1attr","index","card2attr","matchingAttrs","attr","push","name","deckCards","numAttr1Values","values","length","numAttr2Values","numAttr3Values","numAttr4Values","attr1","attr2","attr3","attr4","cardInfo","key","getKey","timesToShuffle","Math","floor","random","idx","this","shuffleArray","cards","find","value","valueIndex","valueName","indexOf","toLowerCase","colorMap","concat","arr","console","log","randomIndex","itemAtIndex","green","purple","red","isColor","attrNames","map","colorAttr","getMatchingAttrs","selectedCards","selectedCardsCount","getMatches","dealCards","checkAvailableMatches","cardFlipped","cardKey","checkMatches","updateScoreFromMatches","keepScore","resetFlippedCards","clearKeptCards","cardClickedAndFollowUp","dispatch","getState","_getState$score","score","possPoints","getCardFromKey","getSelectedCards","isMatch","setTimeout","cardFlippedAndFollowUp","keepScoreAndFollowUp","SharedStatus","props","_this$props$score","matchingAttrsString","join","cardsLeft","react_default","a","createElement","className","tabIndex","disabled","title","onClick","onKeepButtonClick","bind","Component","connect","state","common","UserScore","_this$props","user","sets","points","isActive","data-isactive","prevProps","prevState","snapshot","domNode","ReactDOM","findDOMNode","window","scrollIntoView","behavior","block","inline","StatusArea","_this","userScores","userScore","activeUserIndex","components_UserScore","getUserScores","components_SharedStatus","Card","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","assertThisInitialized","decodeAttr","isEmpty","highlight","faceDescription","imgName","alt","src","imgSrc","data-facedown","data-card-label","overlayShown","Table","getCards","components_Card","gameOver","components_Overlay","document","location","reload","DevTools","createDevTools","redux_devtools_dock_monitor_lib_default","toggleVisibilityKey","changePositionKey","defaultIsVisible","defaultPosition","lib_default","theme","initialState","error","initialStoreState","reducers","arguments","undefined","action","objectSpread","scoreState","newState","tableCardsCount","Array","fill","shuffleDeckCards","toConsumableArray","tableCard","_deckCards$splice","splice","slicedToArray","foundAvailableMatch","tableCardsLength","idx1","idx2","newTableCards","newCard","numSelectedCards","keys","allMatch","activeUser","combineReducers","loggerMiddleware","createLogger","enhancer","compose","applyMiddleware","thunkMiddleware","instrument","App","store","createStore","combinedReducers","es","components_StatusArea","src_DevTools","components_Table","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","render","src_App_0","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"iRAOaA,SAAc,iBAAO,CAAEC,KAFR,kBAGfC,EAAc,iBAAO,CAAED,KAFR,iBCNPE,gHAgCKC,GAEtB,OADsBA,EAAWC,OAAO,SAAAC,GAAI,OAAa,OAATA,IAAkBA,EAAKC,8CAIvDC,EAAOC,EAAOC,GAI9B,IAAIC,EAA+B,OAAlBD,EAAQE,MAyBzB,OAvBAJ,EAAMK,MAAMC,QAAQ,SAACC,EAAWC,GAC9B,IAAIC,EAAYR,EAAMI,MAAMG,GACxBL,EACEI,IAAcE,IAChBP,EAAQG,MAAMG,GAASD,GAII,OAAzBL,EAAQG,MAAMG,IAAmBN,EAAQG,MAAMG,KAAWC,IAC5DP,EAAQG,MAAMG,GAAS,QAI7BN,EAAQE,MAAQ,EAChBF,EAAQQ,cAAgB,GAExBR,EAAQG,MAAMC,QAAQ,SAACK,EAAMH,GACd,OAATG,IACFT,EAAQE,QACRF,EAAQQ,cAAcE,KAAKjB,EAAUU,MAAMG,GAAOK,SAI/CX,6CAyCP,IARA,IAAIY,EAAY,GAEZC,EAAiBpB,EAAUU,MAAM,GAAGW,OAAOC,OAC3CC,EAAiBvB,EAAUU,MAAM,GAAGW,OAAOC,OAC3CE,EAAiBxB,EAAUU,MAAM,GAAGW,OAAOC,OAC3CG,EAAiBzB,EAAUU,MAAM,GAAGW,OAAOC,OAGtCI,EAAQ,EAAGA,EAAQN,EAAgBM,IAC1C,IAAK,IAAIC,EAAQ,EAAGA,EAAQJ,EAAgBI,IAC1C,IAAK,IAAIC,EAAQ,EAAGA,EAAQJ,EAAgBI,IAC1C,IAAK,IAAIC,EAAQ,EAAGA,EAAQJ,EAAgBI,IAAS,CACnD,IAEIC,EAAW,CACbpB,MAAO,CAACgB,EAAOC,EAAOC,EAAOC,GAC7BE,IAJU/B,EAAUgC,OAAON,EAAOC,EAAOC,EAAOC,GAKhDzB,UAAU,EACVS,MAAO,MAETM,EAAUF,KAAKa,GAQvB,IADA,IAAMG,EAAiBC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAC/CC,EAAM,EAAGA,EAAMJ,EAAgBI,IACtCC,KAAKC,aAAapB,GAGpB,OAAOA,yCASaqB,EAAOT,GAC3B,IAAM5B,EAAOqC,EAAMC,KAAK,SAAAtC,GAAI,OAAa,OAATA,GAAiBA,EAAK4B,MAAQA,IAE9D,OAAO5B,GAAc,wCAyCLU,EAAO6B,GACvB,IAKIC,EACAC,EANA5B,EAAO,CACTH,MAAO,KACPK,KAAM,MA8BR,MAxBuB,kBAAXwB,GAEU,KADpBC,EAAa3C,EAAUU,MAAMG,GAAOQ,OAAOwB,QAAQH,EAAMI,kBAGvD9B,EAAO,CACLH,MAAO8B,EACPzB,KAHF0B,EAAY5C,EAAUU,MAAMG,GAAOK,KAAKyB,MAO1CA,EAAaD,EAEc,qBAD3BE,EAAY5C,EAAUU,MAAMG,GAAOQ,OAAOqB,MAExC1B,EAAO,CACLH,MAAO8B,EACPzB,KAAM0B,KAKR5C,EAAUU,MAAMG,GAAOkC,WACzB/B,EAAK0B,MAAQ1C,EAAUU,MAAMG,GAAOkC,SAAS/B,EAAKE,OAG7CF,iCA+DKU,EAAOC,EAAOC,EAAOC,GASjC,MARS,GAAAmB,OAAMtB,GAANsB,OAAcrB,GAAdqB,OAAsBpB,GAAtBoB,OAA8BnB,wCAWrBoB,GAClBC,QAAQC,IAAI,mBACZ,IAAK,IAAId,EAAMY,EAAI3B,OAAS,EAAGe,GAAO,EAAGA,IAAO,CAC9C,IAAIe,EAAclB,KAAKC,MAAMD,KAAKE,UAAYC,EAAM,IAChDgB,EAAcJ,EAAIG,GAEtBH,EAAIG,GAAeH,EAAIZ,GACvBY,EAAIZ,GAAOgB,EAGb,OAAOJ,WA9SUjD,EACZU,MAAQ,CACb,CACEQ,KAAM,QACNG,OAAQ,CAAC,QAAS,SAAU,OAC5B0B,SAAU,CAAEO,MAAS,UAAWC,OAAU,UAAWC,IAAO,YAG9D,CACEtC,KAAM,QACNG,OAAQ,CAAC,IAAK,IAAK,KACnBoC,SAAS,GAGX,CACEvC,KAAM,QACNG,OAAQ,CAAC,UAAW,OAAQ,aAC5BoC,SAAS,GAGX,CACEvC,KAAM,UACNG,OAAQ,CAAC,QAAS,UAAW,SAC7BoC,SAAS,IAvBMzD,EA2BZ0D,UAAY1D,EAAUU,MAAMiD,IAAI,SAAA3C,GAAI,OAAIA,EAAKE,OA3BjClB,EA4BZ4D,UAAY5D,EAAUU,MAAMR,OAAO,SAAAc,GAAI,MAA+B,qBAAnBA,EAAK+B,WA5B5C/C,EAqEZ6D,iBAAmB,SAACC,EAAe3C,GACxC,IAAIJ,EAAgBf,EAAU0D,UAE1BK,EAAqBD,EAAcxC,OACvC,GAAIyC,EAAqB,EACvB,MAAO,GAET,GAA2B,IAAvBA,EACF,OAAOhD,EAUT,IARA,IAAIR,EAAU,CACZG,MAAO,CAAC,KAAM,KAAM,KAAM,MAC1BK,cAAe,GACfN,MAAO,MAGLJ,EAAQyD,EAAc,GAEjBzB,EAAM,EAAGA,EAAM0B,EAAoB1B,IAAO,CACjD,IAAI/B,EAAQwD,EAAczB,GAG1B,GAAsB,KAFtB9B,EAAUP,EAAUgE,WAAW3D,EAAOC,EAAOC,IAEjCE,MACV,MAGJ,OAAOF,EAAQQ,eC3FZ,IAOMkD,EAAY,iBAAO,CAAEnE,KADR,eAIboE,EAAwB,iBAAO,CAAEpE,KADf,oBAIlBqE,EAAc,SAACC,GAAD,MAAc,CAAEtE,KADf,eACmCsE,YAGlDC,EAAe,SAACpE,GAAD,MAAiB,CAAEH,KADlB,gBACuCG,eAGvDqE,EAAyB,SAACrE,GAAD,MAAiB,CAAEH,KADhB,4BACiDG,eAG7EsE,EAAY,iBAAO,CAAEzE,KADR,eAIb0E,EAAoB,iBAAO,CAAE1E,KADP,wBAItB2E,EAAiB,iBAAO,CAAE3E,KADP,qBAGzB,SAAS4E,EAAuBN,GACnC,OAAO,SAACO,EAAUC,GAAa,IAAAC,EAEQD,IAAWE,MAAtC7E,EAFmB4E,EAEnB5E,WAAY8E,EAFOF,EAEPE,WACP/E,EAAUgF,eAAe/E,EAAYmE,GAEzChE,SACLuE,EASL,SAAgCP,GACnC,OAAO,SAACO,EAAUC,GACdD,EAASR,EAAYC,IAErB,IAAMnE,EAAa2E,IAAWE,MAAM7E,WACpC0E,EAASN,EAAapE,IAEtB,IAAMc,EAAgB6D,IAAWE,MAAM/D,cAEvC4D,EAASL,EAAuBrE,IAEhC,IAAM6D,EAAgB9D,EAAUiF,iBAAiBhF,GAC3CiF,EAAmC,IAAzBpB,EAAcxC,QAAgBP,EAAcO,OAAS,EAEhE4D,IACDP,EAAS9E,KACTsF,WAAW,WACPR,EAASH,KACTG,EAAS5E,MACV,OA5BMqF,CAAuBhB,IAE5BW,EAAa,GACbJ,EAASU,MA8BlB,SAASA,IACZ,OAAO,SAACV,GACJA,EAASJ,KACTI,EAASF,KACTE,EAAS9E,KACTsF,WAAW,WACPR,EAASV,KACTU,EAAST,KACTS,EAAS5E,MACV,UC9ELuF,8LAEFhD,KAAKiD,MAAMZ,SAASU,sCAGb,IAAAG,EAC+BlD,KAAKiD,MAAMT,MAAzCC,EADDS,EACCT,WAAYhE,EADbyE,EACazE,cACd0E,EAAsB1E,EAAgBA,EAAc2E,KAAK,MAAQ,GACjEC,EAAYrD,KAAKiD,MAAMT,MAAM3D,UAAUG,OAC7C,OACEsE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,gBAA0DH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,+BAA+BJ,IAE3GC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,qBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAgCC,SAAS,IAAIC,SAAyB,IAAflB,EAAkBmB,MAAM,6FAA6FC,QAAS7D,KAAK8D,kBAAkBC,KAAK/D,OAAnO,QAGAsD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,+BAA+BhB,KAGnDa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,aAAuDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BAA2BN,YAxBjFa,aAwCZC,wBAPf,SAAyBC,GACvB,MAAO,CACLC,OAAQD,EAAMC,OACd3B,MAAO0B,EAAM1B,QAIFyB,CAAyBjB,GCRzBoB,mLAhCJ,IAAAC,EACkCrE,KAAKiD,MAAtCqB,EADDD,EACCC,KAAMC,EADPF,EACOE,KAAMC,EADbH,EACaG,OAAQC,EADrBJ,EACqBI,SAC5B,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYiB,gBAAeD,GAExCnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAwBa,IAE1ChB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,UAAoDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,+BAA+Bc,IAErGjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,YAAsDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,+BAA+Be,gDAM1FG,EAAWC,EAAWC,GAAU,IACzCJ,EAAazE,KAAKiD,MAAlBwB,SAER,GADA7D,QAAQC,IAAI,gCAAkC4D,GAC1CA,EAAU,CACZ,IAAMK,EAAUC,IAASC,YAAYhF,MACrCY,QAAQC,IAAI,gCACZD,QAAQC,IAAIiE,GACZG,OAAOpC,WAAW,WAClBiC,EAAQI,eAAe,CAACC,SAAU,SAAUC,MAAO,MAAOC,OAAQ,SAClE,aA5BkBrB,aCElBsB,0LAEY,IAAAC,EAAAvF,KASd,OARmBA,KAAKiD,MAAMT,MAAMgD,WAAWnE,IAAI,SAACoE,EAAWlH,GAAU,IAC/D+F,EAAuBmB,EAAvBnB,KAAMC,EAAiBkB,EAAjBlB,KAAMC,EAAWiB,EAAXjB,OACdC,EAAWc,EAAKtC,MAAMT,MAAMkD,kBAAoBnH,EACtD,OACE+E,EAAAC,EAAAC,cAACmC,EAAD,CAAWlG,IAAKlB,EAAO+F,KAAMA,EAAMC,KAAMA,EAAMC,OAAQA,EAAQC,SAAUA,uCAQ7E,IAAMe,EAAaxF,KAAK4F,gBAExB,OACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACqC,EAAD,MACCL,UApBgBxB,aAsCVC,wBAPf,SAAyBC,GACvB,MAAO,CACLC,OAAQD,EAAMC,OACd3B,MAAO0B,EAAM1B,QAIFyB,CAAyBqB,WCpClCQ,cACJ,SAAAA,EAAY7C,GAAO,IAAAsC,EAAA,OAAAQ,OAAAC,EAAA,EAAAD,CAAA/F,KAAA8F,IACjBP,EAAAQ,OAAAE,EAAA,EAAAF,CAAA/F,KAAA+F,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAnG,KAAMiD,KAEDmD,YAAcb,EAAKa,YAAYrC,KAAjBgC,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAR,KAHFA,6EAOjBvF,KAAKiD,MAAMZ,SAASD,EAAuBpC,KAAKiD,MAAMnB,2CAItD,IAAM1C,EAAQ1B,EAAU4I,WAAW,EAAGtG,KAAKiD,MAAM7D,OAC3CC,EAAQ3B,EAAU4I,WAAW,EAAGtG,KAAKiD,MAAM5D,OAC3CC,EAAQ5B,EAAU4I,WAAW,EAAGtG,KAAKiD,MAAM3D,OAC3CC,EAAQ7B,EAAU4I,WAAW,EAAGtG,KAAKiD,MAAM1D,OAJ1C8E,EAOkCrE,KAAKiD,MAAtCsD,EAPDlC,EAOCkC,QAASzI,EAPVuG,EAOUvG,SAAU0I,EAPpBnC,EAOoBmC,UACrBC,EAAe,GAAA/F,OAAMtB,EAAMR,KAAZ,KAAA8B,OAAoBrB,EAAMT,KAA1B,KAAA8B,OAAkCpB,EAAMV,KAAxC,KAAA8B,OAAgDnB,EAAMX,MACrE8H,EAAO,GAAAhG,OAAMtB,EAAMR,KAAZ,KAAA8B,OAAoBrB,EAAMT,KAA1B,KAAA8B,OAAkCpB,EAAMV,KAAxC,KAAA8B,OAAgDnB,EAAMX,KAAtD,QAIb,GAAI2H,EAAS,CAEX,OACEjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKmD,IAAI,GAAGC,IAHH,sCAOb,IAAID,EAAM,YACNE,EAAS,kCAQb,OANK/I,IACH6I,EAAMF,EACNI,EAAM,sBAAAnG,OAAyBgG,IAI7B5I,EAEAwF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QAAU+C,EAAWM,gBAAehJ,EAAU+F,QAAS7D,KAAKoG,aAC1E9C,EAAAC,EAAAC,cAAA,OAAKoD,IAAKC,EAAQF,IAAKA,KAM3BrD,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QAAU+C,EAAWM,gBAAehJ,EAAUiJ,kBAAiBN,EAAiB5C,QAAS7D,KAAKoG,aAC5G9C,EAAAC,EAAAC,cAAA,OAAKoD,IAAKC,EAAQF,IAAKA,IACvBrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBApDNO,aAkEJC,wBAPf,SAAyBC,GACvB,MAAO,CACLC,OAAQD,EAAMC,OACdqC,UAAWtC,EAAM1B,MAAMgE,YAIZvC,CAAyB6B,GCzDzB7B,wBANf,SAAyBC,GACvB,MAAO,CACLC,OAAQD,EAAMC,SAIHF,CAZf,SAAiBhB,GACf,OAAQA,EAAMkB,OAAO6C,aACnB1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YADmB,OCEhCwD,cAEJ,SAAAA,EAAYhE,GAAO,IAAAsC,EAAA,OAAAQ,OAAAC,EAAA,EAAAD,CAAA/F,KAAAiH,IACjB1B,EAAAQ,OAAAE,EAAA,EAAAF,CAAA/F,KAAA+F,OAAAG,EAAA,EAAAH,CAAAkB,GAAAd,KAAAnG,KAAMiD,KASRiE,SAAW,WACT3B,EAAKrF,MAAQ,GAEbqF,EAAKtC,MAAMT,MAAM7E,WAAWU,QAAQ,SAACmB,EAAUjB,GAC7C,IAAIV,EAAO,KAEX,GAAI2B,EAAU,KACJC,EAAyBD,EAAzBC,IAAKrB,EAAoBoB,EAApBpB,MAAON,EAAa0B,EAAb1B,SAEhBM,GAA0B,IAAjBA,EAAMY,OACjBnB,EACEyF,EAAAC,EAAAC,cAAA,OAAK/D,IAAKlB,EAAQ,IAAMkB,EAAKgE,UAAU,mBACrCH,EAAAC,EAAAC,cAAC2D,EAAD,CAAMrF,QAASrC,EAAKL,MAAOhB,EAAM,GAAIiB,MAAOjB,EAAM,GAAIkB,MAAOlB,EAAM,GAAImB,MAAOnB,EAAM,GAAIN,SAAUA,MAKtG8C,QAAQC,IAAI,oBAAsBtC,EAAQ,OAC1CqC,QAAQC,IAAIrB,IAIX3B,IACHA,EACEyF,EAAAC,EAAAC,cAAA,OAAK/D,IAAKlB,EAAQ,SAAUkF,UAAU,mBACpCH,EAAAC,EAAAC,cAAC2D,EAAD,CAAMZ,SAAS,MAKrBhB,EAAKrF,MAAMvB,KAAKd,MArClB0H,EAAKrF,MAAQ,KAERqF,EAAKtC,MAAMpE,WACd0G,EAAKtC,MAAMZ,SAASV,KANL4D,wEA+CjB,OAFAvF,KAAKkH,WAEDlH,KAAKiD,MAAMT,MAAM4E,SAEjB9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAC6D,EAAD,MACA/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,mBAAmDH,EAAAC,EAAAC,cAAA,WAAnD,+CACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oCAAoCI,QAAS,WAAOyD,SAASC,SAASC,WAAxF,aAUJlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAC6D,EAAD,MACA/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZzD,KAAKE,eAnEI8D,aAiFLC,wBAPf,SAAyBC,GACvB,MAAO,CACLC,OAAQD,EAAMC,OACd3B,MAAO0B,EAAM1B,QAIFyB,CAAyBgD,+CCzEzBQ,EAXEC,yBACfpE,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CACEqE,oBAAoB,SACpBC,kBAAkB,SAClBC,kBAAkB,EAClBC,gBAAgB,QAEhBzE,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAY0E,MAAM,gDCVhBC,EAAe,CACnBC,MAAO,KACPnB,cAAc,oBCDVoB,EAAoB,CACxBzK,WAAY,GACZkB,UAAW,GACXJ,cAAe,GACf+G,WAAY,CACV,CACElB,KAAM,WACNC,KAAM,EACNC,OAAQ,GAEV,CACEF,KAAM,WACNC,KAAM,EACNC,OAAQ,IAGZkB,gBAAiB,EACjBjD,WAAY,EACZ+D,UAAW,OACXY,UAAU,GCjBNiB,EAAW,CACflE,OFCa,WAAwC,IAA9BD,EAA8BoE,UAAAtJ,OAAA,QAAAuJ,IAAAD,UAAA,GAAAA,UAAA,GAAtBJ,EAAcM,EAAQF,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAAC,EACrD,OAAQC,EAAOhL,MACb,IVTqB,YUWnB,OADA0G,EAAK6B,OAAA0C,EAAA,EAAA1C,CAAA,GAAQ7B,EAAR,CAAeiE,MAAOK,EAAOL,QAEpC,IVXuB,cUarB,OADAjE,EAAK6B,OAAA0C,EAAA,EAAA1C,CAAA,GAAQ7B,EAAR,CAAeiE,MAAO,OAE7B,IVVwB,eUYtB,OADAjE,EAAK6B,OAAA0C,EAAA,EAAA1C,CAAA,GAAQ7B,EAAR,CAAe8C,cAAc,IAEpC,IVZwB,eUctB,OADA9C,EAAK6B,OAAA0C,EAAA,EAAA1C,CAAA,GAAQ7B,EAAR,CAAe8C,cAAc,IAEpC,QACE,OAAO9C,IEfX1B,MDkBa,WAAkD,IAAxCkG,EAAwCJ,UAAAtJ,OAAA,QAAAuJ,IAAAD,UAAA,GAAAA,UAAA,GAA3BF,EAAmBI,EAAQF,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAAC,EAC3DI,EAAQ5C,OAAA0C,EAAA,EAAA1C,CAAA,GAAQ2C,GAEpB,OAAQF,EAAOhL,MAGb,IT3BsC,6BS4BpC,IAAIW,EAAQyB,KAAKC,MAAMD,KAAKE,SAAW4I,EAAWE,iBAAmB,EACrEhI,QAAQC,IAAR,+BAAAH,OAA2CvC,IAE3CwK,EAAShL,WAAWU,QAAQ,SAACR,EAAMkC,GACpB,OAATlC,GAAiBM,KAAU,IAC7BwK,EAAShL,WAAWoC,GAApBgG,OAAA0C,EAAA,EAAA1C,CAAA,GAAgClI,EAAhC,CAAsCU,MAAOwB,EAAKjC,UAAU,OAGhE,MAMF,ITpCsB,aSsClB,IAEMe,EAAc6J,EAAd7J,UAE+B,IAAjC6J,EAAW/K,WAAWqB,QACxB2J,EAAShL,WAAa,IAAIkL,MALd,IAK2BC,KAAK,MAEnB,IAArBjK,EAAUG,SACZ2J,EAAS9J,UAAYnB,EAAUqL,mBAC/BlK,EAAY8J,EAAS9J,YAIvB8J,EAAShL,WAAToI,OAAAiD,EAAA,EAAAjD,CAA0B2C,EAAW/K,YAGvC,IAAIiL,EAAkB,EACtBD,EAAShL,WAAWU,QAAQ,SAAC4K,EAAWlJ,GAEtC,GAAkB,OAAdkJ,GACF,GAAIpK,EAAUG,OAAS,EAAG,KAAAkK,EACTrK,EAAUsK,OAAO,EAAG,GAA5BtL,EADiBkI,OAAAqD,EAAA,EAAArD,CAAAmD,EAAA,MAExBP,EAAShL,WAAWoC,GAApBgG,OAAA0C,EAAA,EAAA1C,CAAA,GAAgClI,EAAhC,CAAsCU,MAAOwB,IAC7C6I,UAIFA,MAGJD,EAASC,gBAAkBA,EAE7B,MAEF,ITrE2B,kBSwEzB,GAFAD,EAASvB,SAAWsB,EAAWE,gBAAkB,GAE5CD,EAASvB,SAAU,CAItB,IAHA,IAAIiC,GAAsB,EAEpBC,EAAmBZ,EAAW/K,WAAWqB,OACtCuK,EAAO,EAAGA,EAAOD,IAAqBD,EAAqBE,IAAQ,CAC1E,IAAMxL,EAAQ2K,EAAW/K,WAAW4L,GACpC,GAAKxL,EAEL,IAAK,IAAIyL,EAAOD,EAAO,EAAGC,EAAOF,IAAqBD,EAAqBG,IAAQ,CACjF,IAAMxL,EAAQ0K,EAAW/K,WAAW6L,GACpC,GAAKxL,EAAL,CAEA4C,QAAQC,IAAI,4BACZD,QAAQC,IAAI9C,GAEZ6C,QAAQC,IAAI,4BACZD,QAAQC,IAAI7C,GAEZ,IAAMkC,EAAQ,CAACnC,EAAOC,GAChBS,EAAgBf,EAAU6D,iBAAiBrB,GAC7CzB,GAAiBA,EAAcO,OAAS,IAC1CqK,GAAsB,KAK5BV,EAASvB,UAAYiC,EAEvB,MAEF,ITnGwB,eSoGtB,IACUvH,EAAY0G,EAAZ1G,QACAnE,EAAe+K,EAAf/K,WACFE,EAAOH,EAAUgF,eAAe/E,EAAYmE,GAClD,GAAY,MAARjE,EAAc,CAChB,IAAM4L,EAAa1D,OAAAiD,EAAA,EAAAjD,CAAOpI,GAEpB+L,EAAO3D,OAAA0C,EAAA,EAAA1C,CAAA,GAAQlI,EAAR,CAAcC,UAAWD,EAAKC,WAC3C2L,EAAcC,EAAQnL,OAASmL,EAC/Bf,EAAShL,WAAa8L,EAG1B,MAEF,IT/GyB,gBSgHvB,IACU9L,EAAe6K,EAAf7K,WACF6D,EAAgB9D,EAAUiF,iBAAiBhF,GAE3CgM,EAAmB5D,OAAO6D,KAAKpI,GAAexC,OAC9CP,EAAgBf,EAAU6D,iBAAiBC,GAC3CqI,EAAYpL,EAAcO,OAAS,EACzC2J,EAASnC,UAAaqD,EAAW,kBAAoB,qBAGnDlB,EAASlK,cADPoL,GAAYF,EAAmB,EACRlL,EAGA,GAI7B,MAEF,IThIqC,4BSgIrC,IACUd,EAAe6K,EAAf7K,WACF6D,EAAgB9D,EAAUiF,iBAAiBhF,GAEjD,GAD0B+K,EAAlBjK,cACUO,OAAS,EAAG,CAC5B,IAAM2K,EAAmB5D,OAAO6D,KAAKpI,GAAexC,OAChDyD,EAAakH,EAAmBA,EACpChB,EAASlG,WAAaA,OAGtBkG,EAASlG,WAAa,EAExB,MAEF,IT3IsB,aS2ItB,IACUiD,EAAoBgD,EAApBhD,gBACFoE,EAAU/D,OAAA0C,EAAA,EAAA1C,CAAA,GAAQ2C,EAAWlD,WAAWE,IAET,qBAAzBiD,EAASlG,aACnBqH,EAAWtF,QAAUkE,EAAWjG,WAChCqH,EAAWvF,OACXoE,EAASnD,WAATO,OAAAiD,EAAA,EAAAjD,CAA0B2C,EAAWlD,YACrCmD,EAASnD,WAAWE,GAAmBoE,GAEzCnB,EAASjD,iBAAmBA,EAAkB,GAAK,EACnDiD,EAASlG,WAAa,EACtBkG,EAASlK,cAAgB,GACzBkK,EAASnC,UAAY,OACrB,MAGF,ITzJ+B,sBS0J7BmC,EAASlG,WAAa,EACtBkG,EAASlK,cAAgB,GACzBkK,EAAShL,WAAa+K,EAAW/K,WAAW0D,IAAI,SAAAxD,GAAI,OAAKA,EAAIkI,OAAA0C,EAAA,EAAA1C,CAAA,GAAQlI,EAAR,CAAcC,UAAU,IAAS,OAC9F6K,EAASjD,iBAAmBgD,EAAWhD,gBAAkB,GAAK,EAC9D,MAEF,IT7J4B,mBS8J1B,IACU/H,EAAe+K,EAAf/K,WACF6D,EAAgB9D,EAAUiF,iBAAiBhF,GAC3C8L,EAAa1D,OAAAiD,EAAA,EAAAjD,CAAOpI,GAC1B6D,EAAcnD,QAAQ,SAAAR,GAAU4L,EAAc5L,EAAKU,OAAS,OAC5DoK,EAAShL,WAAa8L,EAQ5B,OAAOd,IChMMoB,cAAgB1B,GCFzB2B,EAAmBC,yBAEnBC,GAAWC,YACfC,YACEC,IACAL,GAEFvC,EAAS6C,kBCmCIC,eArCb,SAAAA,EAAYtH,GAAO,IAAAsC,EDKkB2C,ECLlB,OAAAnC,OAAAC,EAAA,EAAAD,CAAA/F,KAAAuK,IACjBhF,EAAAQ,OAAAE,EAAA,EAAAF,CAAA/F,KAAA+F,OAAAG,EAAA,EAAAH,CAAAwE,GAAApE,KAAAnG,KAAMiD,KAEDuH,MDGOC,YAAYC,EAAkBxC,EAAcgC,ICNvC3E,wEAmBjB,OACEjC,EAAAC,EAAAC,cAACmH,EAAA,SAAD,CAAUH,MAAOxK,KAAKwK,OACpBlH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAKhBH,EAAAC,EAAAC,cAACoH,EAAD,OAEFtH,EAAAC,EAAAC,cAACqH,EAAD,MACAvH,EAAAC,EAAAC,cAACsH,EAAD,eA/BQ9G,aCFZ+G,GAAcC,QACW,cAA7B/F,OAAOsC,SAAS0D,UAEe,UAA7BhG,OAAOsC,SAAS0D,UAEhBhG,OAAOsC,SAAS0D,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzH,QACfmH,UAAUC,cAAcQ,WAK1BlL,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBkL,MAAM,SAAA5D,GACLvH,QAAQuH,MAAM,4CAA6CA,KCxEjEpD,IAASiH,OAAO1I,EAAAC,EAAAC,cAACyI,GAAD,MAAS3E,SAAS4E,eAAe,SDalC,WACb,GAA6C,kBAAmBb,UAAW,CAGzE,GADkB,IAAIc,IAAIC,SAAwBnH,OAAOsC,UAC3C8E,SAAWpH,OAAOsC,SAAS8E,OAIvC,OAGFpH,OAAOqH,iBAAiB,OAAQ,WAC9B,IAAMlB,EAAK,GAAA1K,OAAM0L,SAAN,sBAEPrB,IAiDV,SAAiCK,GAE/BmB,MAAMnB,GACHI,KAAK,SAAAgB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBpM,QAAQ,cAG7C8K,UAAUC,cAAcsB,MAAMpB,KAAK,SAAAC,GACjCA,EAAaoB,aAAarB,KAAK,WAC7BvG,OAAOsC,SAASC,aAKpB2D,GAAgBC,KAGnBW,MAAM,WACLnL,QAAQC,IACN,mEArEAiM,CAAwB1B,GAIxBC,UAAUC,cAAcsB,MAAMpB,KAAK,WACjC5K,QAAQC,IACN,+GAMJsK,GAAgBC,MCxCxB2B","file":"static/js/main.b19a5d0e.chunk.js","sourcesContent":["export const SET_ERROR = 'SET_ERROR';\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\r\nexport const setError = (error) => ({ type: SET_ERROR, error });\r\nexport const clearError = () => ({ type: CLEAR_ERROR });\r\n\r\nexport const SHOW_OVERLAY = 'SHOW_OVERLAY';\r\nexport const HIDE_OVERLAY = 'HIDE_OVERLAY';\r\nexport const showOverlay = () => ({ type: SHOW_OVERLAY });\r\nexport const hideOverlay = () => ({ type: HIDE_OVERLAY });\r\n","export default class utilities {\r\n  static attrs = [\r\n    {\r\n      name: 'color',\r\n      values: ['green', 'purple', 'red'],\r\n      colorMap: { 'green': '#00C000', 'purple': '#C000C0', 'red': '#FF0000' }\r\n    },\r\n\r\n    {\r\n      name: 'count',\r\n      values: ['1', '2', '3'],\r\n      isColor: false\r\n    },\r\n\r\n    {\r\n      name: 'shape',\r\n      values: ['diamond', 'oval', 'rectangle'],\r\n      isColor: false\r\n    },\r\n\r\n    {\r\n      name: 'pattern',\r\n      values: ['empty', 'striped', 'solid'],\r\n      isColor: false\r\n    }\r\n  ];\r\n\r\n  static attrNames = utilities.attrs.map(attr => attr.name);\r\n  static colorAttr = utilities.attrs.filter(attr => typeof (attr.colorMap) !== \"undefined\");\r\n\r\n  // static cardInfoIndexCache = [];\r\n\r\n  static getSelectedCards(tableCards) {\r\n    const selectedCards = tableCards.filter(card => card !== null && !card.faceDown);\r\n    return selectedCards;\r\n  }\r\n\r\n  static getMatches(card1, card2, matches) {\r\n\r\n    // For first test, any matches will do;\r\n    // However for subsequent tests, only match against what's already matched\r\n    var firstTest = (matches.count === null);\r\n\r\n    card1.attrs.forEach((card1attr, index) => {\r\n      let card2attr = card2.attrs[index];\r\n      if (firstTest) {\r\n        if (card1attr === card2attr) {\r\n          matches.attrs[index] = card1attr;\r\n        }\r\n      }\r\n      else {\r\n        if (matches.attrs[index] !== null && matches.attrs[index] !== card2attr)\r\n          matches.attrs[index] = null;\r\n      }\r\n    });\r\n\r\n    matches.count = 0\r\n    matches.matchingAttrs = [];\r\n\r\n    matches.attrs.forEach((attr, index) => {\r\n      if (attr !== null) {\r\n        matches.count++;\r\n        matches.matchingAttrs.push(utilities.attrs[index].name);\r\n      }\r\n    });\r\n\r\n    return matches;\r\n  }\r\n\r\n  static getMatchingAttrs = (selectedCards, deckCards) => {\r\n    var matchingAttrs = utilities.attrNames;\r\n\r\n    var selectedCardsCount = selectedCards.length;\r\n    if (selectedCardsCount < 1)\r\n      return [];\r\n\r\n    if (selectedCardsCount === 1)\r\n      return matchingAttrs;\r\n\r\n    var matches = {\r\n      attrs: [null, null, null, null],\r\n      matchingAttrs: [],\r\n      count: null\r\n    };\r\n\r\n    var card1 = selectedCards[0];\r\n\r\n    for (var idx = 1; idx < selectedCardsCount; idx++) {\r\n      var card2 = selectedCards[idx];\r\n      matches = utilities.getMatches(card1, card2, matches);\r\n\r\n      if (matches.count === 0)\r\n        break;\r\n    }\r\n\r\n    return matches.matchingAttrs;\r\n  }\r\n\r\n  static shuffleDeckCards() {\r\n    var deckCards = [];\r\n\r\n    let numAttr1Values = utilities.attrs[0].values.length;\r\n    let numAttr2Values = utilities.attrs[0].values.length;\r\n    let numAttr3Values = utilities.attrs[0].values.length;\r\n    let numAttr4Values = utilities.attrs[0].values.length;\r\n\r\n\r\n    for (var attr1 = 0; attr1 < numAttr1Values; attr1++) {\r\n      for (var attr2 = 0; attr2 < numAttr2Values; attr2++) {\r\n        for (var attr3 = 0; attr3 < numAttr3Values; attr3++) {\r\n          for (var attr4 = 0; attr4 < numAttr4Values; attr4++) {\r\n            const key = utilities.getKey(attr1, attr2, attr3, attr4);\r\n\r\n            var cardInfo = {\r\n              attrs: [attr1, attr2, attr3, attr4],\r\n              key,\r\n              faceDown: true,\r\n              index: null // used when dealt to table\r\n            };\r\n            deckCards.push(cardInfo);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    const timesToShuffle = Math.floor(Math.random() * 50) + 10; // At least 5\r\n    for (let idx = 0; idx < timesToShuffle; idx++) {\r\n      this.shuffleArray(deckCards);\r\n    }\r\n\r\n    return deckCards;\r\n  }\r\n\r\n  // static getCardIndexFromKey(cards, key) {\r\n  //   const cardIndex = cards.findIndex(card => card !== null && card.key === key);\r\n\r\n  //   return cardIndex ? cardIndex : null;\r\n  // }\r\n\r\n  static getCardFromKey(cards, key) {\r\n    const card = cards.find(card => card !== null && card.key === key);\r\n\r\n    return card ? card : null;\r\n  }\r\n\r\n  // static decodeKey(key) {\r\n  //   var attrs = JSON.parse(atob(key));\r\n  //   return attrs;\r\n  // }\r\n\r\n  // static decodeColor(colorProp) {\r\n  //   var color = {\r\n  //     index: null,\r\n  //     name: null,\r\n  //     value: null\r\n  //   };\r\n\r\n  //   var colorName;\r\n\r\n  //   if (typeof (colorProp) === \"string\") {\r\n  //     var colorIndex = utilities.colorAttr.values.indexOf(colorProp.toLowerCase());\r\n  //     if (colorIndex !== -1) {\r\n  //       colorName = utilities.colorAttr.values[colorIndex]; // get it from the array so it's normalized\r\n  //       color = {\r\n  //         index: colorIndex,\r\n  //         name: colorName,\r\n  //         value: utilities.colorAttr.colorMap[colorName]\r\n  //       }\r\n  //     }\r\n  //   } else if (typeof (colorProp === \"number\")) {\r\n  //     colorName = utilities.colorAttrs.name[colorProp];\r\n  //     if (typeof (colorName) !== \"undefined\") {\r\n  //       color = {\r\n  //         index: colorProp,\r\n  //         name: colorName,\r\n  //         value: utilities.colorAttr.colorMap[colorName]\r\n  //       }\r\n  //     }\r\n  //   }\r\n\r\n  //   return color;\r\n  // }\r\n\r\n  static decodeAttr(index, value) {\r\n    var attr = {\r\n      index: null,\r\n      name: null\r\n    };\r\n\r\n    var valueIndex;\r\n    var valueName;\r\n\r\n    if (typeof (value) === \"string\") {\r\n      valueIndex = utilities.attrs[index].values.indexOf(value.toLowerCase());\r\n      if (valueIndex !== -1) {\r\n        valueName = utilities.attrs[index].name[valueIndex]; // get it from the array so it's normalized\r\n        attr = {\r\n          index: valueIndex,\r\n          name: valueName\r\n        }\r\n      }\r\n    } else if (typeof (value === \"number\")) {\r\n      valueIndex = value;\r\n      valueName = utilities.attrs[index].values[value];\r\n      if (typeof (valueName) !== \"undefined\") {\r\n        attr = {\r\n          index: valueIndex,\r\n          name: valueName\r\n        }\r\n      }\r\n    }\r\n\r\n    if (utilities.attrs[index].colorMap) {\r\n      attr.value = utilities.attrs[index].colorMap[attr.name];\r\n    }\r\n\r\n    return attr;\r\n  }\r\n\r\n  // static decodePattern(patternProp) {\r\n  //   var pattern = {\r\n  //     index: null,\r\n  //     name: null\r\n  //   };\r\n\r\n  //   var patternName;\r\n\r\n  //   if (typeof (patternProp) === \"string\") {\r\n  //     var patternIndex = utilities.attrs[3]s.indexOf(patternProp.toLowerCase());\r\n  //     if (patternIndex !== -1) {\r\n  //       patternName = utilities.attrs[3]s[patternIndex]; // get it from the array so it's normalized\r\n  //       pattern = {\r\n  //         index: patternIndex,\r\n  //         name: patternName\r\n  //       }\r\n  //     }\r\n  //   } else if (typeof (patternProp === \"number\")) {\r\n  //     patternName = utilities.attrs[3]s[patternProp];\r\n  //     if (typeof (patternName) !== \"undefined\") {\r\n  //       pattern = {\r\n  //         index: patternProp,\r\n  //         name: patternName\r\n  //       }\r\n  //     }\r\n  //   }\r\n\r\n  //   return pattern;\r\n  // }\r\n\r\n  // static decodeSize(sizeProp) {\r\n  //   var size = {\r\n  //     index: null,\r\n  //     name: null\r\n  //   };\r\n\r\n  //   var sizeName;\r\n\r\n  //   if (typeof (sizeProp) === \"string\") {\r\n  //     var sizeIndex = utilities.attrs[1]s.indexOf(sizeProp.toLowerCase());\r\n  //     if (sizeIndex !== -1) {\r\n  //       sizeName = utilities.attrs[1]s[sizeIndex]; // get it from the array so it's normalized\r\n  //       size = {\r\n  //         index: sizeIndex,\r\n  //         name: sizeName\r\n  //       }\r\n  //     }\r\n  //   } else if (typeof (sizeProp === \"number\")) {\r\n  //     sizeName = utilities.attrs[1]s[sizeProp];\r\n  //     if (typeof (sizeName) !== \"undefined\") {\r\n  //       size = {\r\n  //         index: sizeProp,\r\n  //         name: sizeName\r\n  //       }\r\n  //     }\r\n  //   }\r\n\r\n  //   return size;\r\n  // }\r\n\r\n  static getKey(attr1, attr2, attr3, attr4) {\r\n    const key = `${attr1}${attr2}${attr3}${attr4}`;\r\n    // const attrsObj = {\r\n    //   attr1: attr1,\r\n    //   attr2: attr2,\r\n    //   attr3: attr3,\r\n    //   attr4: attr4\r\n    // }\r\n    // var key = btoa(JSON.stringify(attrsObj)); // base64 encoded key so can put on DOM element and not be obvious which card it is\r\n    return key;\r\n  }\r\n\r\n  static shuffleArray(arr) {\r\n    console.log(\"Shuffling cards\");\r\n    for (var idx = arr.length - 1; idx >= 0; idx--) {\r\n      var randomIndex = Math.floor(Math.random() * (idx + 1));\r\n      var itemAtIndex = arr[randomIndex];\r\n\r\n      arr[randomIndex] = arr[idx];\r\n      arr[idx] = itemAtIndex;\r\n    }\r\n\r\n    return arr;\r\n  }\r\n}\r\n","import { showOverlay, hideOverlay } from './commonActions';\r\nimport utilities from '../utilities';\r\n\r\n\r\nexport const TEST_REMOVE_BUNCH_OF_CARDS = 'TEST_REMOVE_BUNCH_OF_CARDS';\r\nexport const testRemoveBunchOfCards = (count) => ({ type: TEST_REMOVE_BUNCH_OF_CARDS, count });\r\n\r\n\r\n\r\n\r\nexport const DEAL_CARDS = 'DEAL_CARDS';\r\nexport const dealCards = () => ({ type: DEAL_CARDS });\r\n\r\nexport const CHECK_GAME_OVER = 'CHECK_GAME_OVER';\r\nexport const checkAvailableMatches = () => ({ type: CHECK_GAME_OVER });\r\n\r\nexport const CARD_FLIPPED = 'CARD_FLIPPED';\r\nexport const cardFlipped = (cardKey) => ({ type: CARD_FLIPPED, cardKey });\r\n\r\nexport const CHECK_MATCHES = 'CHECK_MATCHES';\r\nexport const checkMatches = (tableCards) => ({ type: CHECK_MATCHES, tableCards });\r\n\r\nexport const UPDATE_SCORE_FROM_MATCHES = 'UPDATE_SCORE_FROM_MATCHES';\r\nexport const updateScoreFromMatches = (tableCards) => ({ type: UPDATE_SCORE_FROM_MATCHES, tableCards });\r\n\r\nexport const KEEP_SCORE = 'KEEP_SCORE';\r\nexport const keepScore = () => ({ type: KEEP_SCORE });\r\n\r\nexport const RESET_FLIPPED_CARDS = 'RESET_FLIPPED_CARDS';\r\nexport const resetFlippedCards = () => ({ type: RESET_FLIPPED_CARDS });\r\n\r\nexport const CLEAR_KEPT_CARDS = 'CLEAR_KEPT_CARDS';\r\nexport const clearKeptCards = () => ({ type: CLEAR_KEPT_CARDS });\r\n\r\nexport function cardClickedAndFollowUp(cardKey) {\r\n    return (dispatch, getState) => {\r\n\r\n        const { tableCards, possPoints } = getState().score;\r\n        const card = utilities.getCardFromKey(tableCards, cardKey);\r\n\r\n        if (card.faceDown) {\r\n            dispatch(cardFlippedAndFollowUp(cardKey));\r\n        } else {\r\n            if (possPoints > 0) {\r\n                dispatch(keepScoreAndFollowUp());\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function cardFlippedAndFollowUp(cardKey) {\r\n    return (dispatch, getState) => {\r\n        dispatch(cardFlipped(cardKey));\r\n\r\n        const tableCards = getState().score.tableCards;\r\n        dispatch(checkMatches(tableCards));\r\n\r\n        const matchingAttrs = getState().score.matchingAttrs;\r\n\r\n        dispatch(updateScoreFromMatches(tableCards));\r\n\r\n        const selectedCards = utilities.getSelectedCards(tableCards);\r\n        const isMatch = selectedCards.length === 1 || matchingAttrs.length > 0;\r\n\r\n        if (!isMatch) {\r\n            dispatch(showOverlay());\r\n            setTimeout(() => {\r\n                dispatch(resetFlippedCards());\r\n                dispatch(hideOverlay());\r\n            }, 2000);\r\n        }\r\n    };\r\n}\r\n\r\nexport function keepScoreAndFollowUp() {\r\n    return (dispatch) => {\r\n        dispatch(keepScore());\r\n        dispatch(clearKeptCards());\r\n        dispatch(showOverlay());\r\n        setTimeout(() => {\r\n            dispatch(dealCards());\r\n            dispatch(checkAvailableMatches());\r\n            dispatch(hideOverlay());\r\n        }, 300);\r\n    };\r\n}\r\n\r\nexport function testRemoveBunchOfCardsAndFollowUp(count) {\r\n    return (dispatch) => {\r\n        dispatch(testRemoveBunchOfCards(count));\r\n        dispatch(clearKeptCards());\r\n        dispatch(showOverlay());\r\n        setTimeout(() => {\r\n            dispatch(dealCards());\r\n            dispatch(checkAvailableMatches());\r\n            dispatch(hideOverlay());\r\n        }, 300);\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../App.css';\r\nimport { keepScoreAndFollowUp } from '../actions/scoreActions';\r\n\r\nclass SharedStatus extends Component {\r\n  onKeepButtonClick(/*event*/) {\r\n    this.props.dispatch(keepScoreAndFollowUp());\r\n  }\r\n\r\n  render() {\r\n    const { possPoints, matchingAttrs } = this.props.score;\r\n    const matchingAttrsString = matchingAttrs ? matchingAttrs.join(', ') : '';\r\n    const cardsLeft = this.props.score.deckCards.length;\r\n    return (\r\n      <div className='SharedStatus'>\r\n        <div className='status-section cards-area'>\r\n          <span className='statusTitle ui label'>Cards Left: </span><span className='status-count ui basic label'>{cardsLeft}</span>\r\n        </div>\r\n        <div className='status-section posspoints-area'>\r\n          <span className='statusTitle ui label'>Possible Points: </span>\r\n          <div className=''>\r\n            <button className='ui button primary keep-button' tabIndex='0' disabled={possPoints === 0} title='Keep the possible points. Also you can click on a flipped up card in the set to keep them.' onClick={this.onKeepButtonClick.bind(this)}>\r\n              Keep\r\n            </button>\r\n            <span className='status-count ui basic label'>{possPoints}</span>\r\n          </div>\r\n        </div>\r\n        <div className='status-section matching-attrs-area'>\r\n          <span className='statusTitle ui label'>Matches: </span><span className='matching-attrs ui label'>{matchingAttrsString}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    common: state.common,\r\n    score: state.score\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SharedStatus);\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../App.css';\r\n\r\nclass UserScore extends Component {\r\n  render() {\r\n    const { user, sets, points, isActive } = this.props;\r\n    return (\r\n      <div className='UserScore' data-isactive={isActive}>\r\n\r\n        <div className='status-section userArea' >\r\n          <span className='statusTitle ui label'>{user}</span>\r\n        </div>\r\n        <div className='status-section setsArea'>\r\n          <span className='statusTitle ui label'>Sets: </span><span className='status-count ui basic label'>{sets}</span>\r\n        </div>\r\n        <div className='status-section points-area'>\r\n          <span className='statusTitle ui label'>Points: </span><span className='status-count ui basic label'>{points}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    const { isActive } = this.props;\r\n    console.log(\"componentDidUpdate: isActive=\" + isActive);\r\n    if (isActive) {\r\n      const domNode = ReactDOM.findDOMNode(this);\r\n      console.log(\"componentDidUpdate: domNode=\");\r\n      console.log(domNode);\r\n      window.setTimeout(() => {\r\n      domNode.scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"end\"});\r\n    },100);\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserScore;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../App.css';\r\nimport SharedStatus from './SharedStatus';\r\nimport UserScore from './UserScore';\r\n\r\nclass StatusArea extends Component {\r\n\r\n  getUserScores() {\r\n    const userScores = this.props.score.userScores.map((userScore, index) => {\r\n      const { user, sets, points } = userScore;\r\n      const isActive = this.props.score.activeUserIndex === index;\r\n      return (\r\n        <UserScore key={index} user={user} sets={sets} points={points} isActive={isActive} />\r\n      );\r\n    });\r\n\r\n    return userScores;\r\n  }\r\n\r\n  render() {\r\n    const userScores = this.getUserScores();\r\n\r\n    return (\r\n      <div className='StatusArea'>\r\n        <SharedStatus />\r\n        {userScores}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    common: state.common,\r\n    score: state.score\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(StatusArea);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n// import FlipCard from 'react-flipcard-2';\r\n\r\nimport '../App.css';\r\nimport { cardClickedAndFollowUp } from '../actions/scoreActions';\r\nimport utilities from '../utilities';\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.dispatch(cardClickedAndFollowUp(this.props.cardKey));\r\n  }\r\n\r\n  render() {\r\n    const attr1 = utilities.decodeAttr(0, this.props.attr1);\r\n    const attr2 = utilities.decodeAttr(1, this.props.attr2);\r\n    const attr3 = utilities.decodeAttr(2, this.props.attr3);\r\n    const attr4 = utilities.decodeAttr(3, this.props.attr4);\r\n\r\n    // const { attr1, attr2, attr3, attr4 } = this.state;\r\n    const { isEmpty, faceDown, highlight } = this.props;\r\n    const faceDescription = `${attr1.name} ${attr2.name} ${attr3.name} ${attr4.name}`;\r\n    const imgName = `${attr1.name}-${attr2.name}-${attr3.name}-${attr4.name}.png`;\r\n    // <FlipCard flipped={!faceDown} disabled={true}>\r\n    // </FlipCard>\r\n\r\n    if (isEmpty) {\r\n      let imgSrc = \"images/cards/brave/CardEmpty.png\";\r\n      return (\r\n        <div className=\"Card is-empty\">\r\n          <img alt=\"\" src={imgSrc} />\r\n        </div >\r\n      );\r\n    } else {\r\n      let alt = \"card back\";\r\n      let imgSrc = \"images/cards/brave/CardBack.png\";\r\n\r\n      if (!faceDown) {\r\n        alt = faceDescription;\r\n        imgSrc = `images/cards/brave/${imgName}`;\r\n        // imgSrc = \"images/cards/CardFaceBlank.png\";\r\n      }\r\n\r\n      if (faceDown) {\r\n        return (\r\n          <div className={\"Card \" + highlight} data-facedown={faceDown} onClick={this.handleClick}>\r\n            <img src={imgSrc} alt={alt} />\r\n          </div >\r\n        );\r\n      }\r\n      // else ...\r\n      return (\r\n        <div className={\"Card \" + highlight} data-facedown={faceDown} data-card-label={faceDescription} onClick={this.handleClick}>\r\n          <img src={imgSrc} alt={alt} />\r\n          <div className=\"card-label\"></div>\r\n        </div >\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    common: state.common,\r\n    highlight: state.score.highlight\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Card);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport '../App.css';\r\n\r\nfunction Overlay(props) {\r\n  return !props.common.overlayShown ? null : (\r\n    <div className=\"Overlay\" />\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    common: state.common\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Overlay);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport '../App.css';\r\nimport Card from './Card';\r\nimport Overlay from './Overlay';\r\nimport { dealCards } from '../actions/scoreActions';\r\n\r\nclass Table extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.cards = null;\r\n\r\n    if (!this.props.deckCards) {\r\n      this.props.dispatch(dealCards());\r\n    }\r\n  }\r\n\r\n  getCards = () => {\r\n    this.cards = [];\r\n\r\n    this.props.score.tableCards.forEach((cardInfo, index) => {\r\n      let card = null;\r\n\r\n      if (cardInfo) {\r\n        const { key, attrs, faceDown } = cardInfo;\r\n\r\n        if (attrs && attrs.length === 4) {\r\n          card = (\r\n            <div key={index + \".\" + key} className=\"Table_grid_item\">\r\n              <Card cardKey={key} attr1={attrs[0]} attr2={attrs[1]} attr3={attrs[2]} attr4={attrs[3]} faceDown={faceDown} />\r\n            </div>\r\n          );\r\n        }\r\n        else {\r\n          console.log(\"cardInfo @ index \" + index + \" = \");\r\n          console.log(cardInfo);\r\n        }\r\n      }\r\n\r\n      if (!card) {\r\n        card = (\r\n          <div key={index + \".empty\"} className=\"Table_grid_item\">\r\n            <Card isEmpty={true} />\r\n          </div>\r\n        );\r\n      }\r\n\r\n      this.cards.push(card);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    this.getCards();\r\n\r\n    if (this.props.score.gameOver) {\r\n      return (\r\n        <div className=\"Table\">\r\n          <Overlay />\r\n          <div className=\"game-over-message\">Congratulations!<br/>All possible combinations have been played!</div>\r\n          <button className='ui button primary new-game-button' onClick={() => {document.location.reload()}}>\r\n            New Game\r\n          </button>\r\n\r\n        </div>\r\n      );\r\n    }\r\n    // else ...\r\n\r\n    return (\r\n      <div className=\"Table\">\r\n        <Overlay />\r\n        <div className=\"Table_grid\">\r\n          {this.cards}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    common: state.common,\r\n    score: state.score\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);\r\n","import React from 'react';\r\nimport LogMonitor from 'redux-devtools-log-monitor';\r\nimport DockMonitor from 'redux-devtools-dock-monitor';\r\nimport { createDevTools } from 'redux-devtools';\r\n\r\nconst DevTools = createDevTools(\r\n  <DockMonitor\r\n    toggleVisibilityKey=\"ctrl-x\"\r\n    changePositionKey=\"ctrl-z\"\r\n    defaultIsVisible={false}\r\n    defaultPosition=\"left\"\r\n  >\r\n    <LogMonitor theme=\"tomorrow\" />\r\n  </DockMonitor>,\r\n);\r\n\r\nexport default DevTools;\r\n","import * as commonActions from './commonActions';\r\n\r\nconst initialState = {\r\n  error: null,\r\n  overlayShown: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case commonActions.SET_ERROR:\r\n      state = { ...state, error: action.error };\r\n      return state;\r\n    case commonActions.CLEAR_ERROR:\r\n      state = { ...state, error: null };\r\n      return state;\r\n    case commonActions.SHOW_OVERLAY:\r\n      state = { ...state, overlayShown: true };\r\n      return state;\r\n    case commonActions.HIDE_OVERLAY:\r\n      state = { ...state, overlayShown: false };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as scoreActions from './scoreActions';\r\nimport utilities from '../utilities';\r\n\r\nconst initialStoreState = {\r\n  tableCards: [],\r\n  deckCards: [],\r\n  matchingAttrs: [],\r\n  userScores: [\r\n    {\r\n      user: \"Player 1\",\r\n      sets: 0,\r\n      points: 0\r\n    },\r\n    {\r\n      user: \"Player 2\",\r\n      sets: 0,\r\n      points: 0\r\n    }\r\n  ],\r\n  activeUserIndex: 0,\r\n  possPoints: 0,\r\n  highlight: \"none\",\r\n  gameOver: false,\r\n};\r\n\r\nexport default function (scoreState = initialStoreState, action) {\r\n  var newState = { ...scoreState };\r\n\r\n  switch (action.type) {\r\n\r\n\r\n    case scoreActions.TEST_REMOVE_BUNCH_OF_CARDS:\r\n      let count = Math.floor(Math.random() * scoreState.tableCardsCount) + 1;\r\n      console.log(`TEST_REMOVE_BUNCH_OF_CARDS: ${count}`);\r\n\r\n      newState.tableCards.forEach((card, idx) => {\r\n        if (card !== null && count-- > 0) {\r\n          newState.tableCards[idx] = { ...card, index: idx, faceDown: false };\r\n        }\r\n      });\r\n      break;\r\n\r\n\r\n\r\n\r\n\r\n    case scoreActions.DEAL_CARDS:\r\n      {\r\n        const count = 20;\r\n\r\n        let { deckCards } = scoreState;\r\n\r\n        if (scoreState.tableCards.length === 0) {\r\n          newState.tableCards = new Array(count).fill(null);\r\n\r\n          if (deckCards.length === 0) {\r\n            newState.deckCards = utilities.shuffleDeckCards();\r\n            deckCards = newState.deckCards;\r\n          }\r\n\r\n        } else {\r\n          newState.tableCards = [...scoreState.tableCards];\r\n        }\r\n\r\n        let tableCardsCount = 0;\r\n        newState.tableCards.forEach((tableCard, idx) => {\r\n          // Replace empty table slots (null values) with the next available deck card, if any\r\n          if (tableCard === null) {\r\n            if (deckCards.length > 0) {\r\n              const [card] = deckCards.splice(0, 1); // returns an array of the spliced entries which is just one entry\r\n              newState.tableCards[idx] = { ...card, index: idx };\r\n              tableCardsCount++;\r\n            }\r\n          }\r\n          else {\r\n            tableCardsCount++;\r\n          }\r\n        });\r\n        newState.tableCardsCount = tableCardsCount;\r\n      }\r\n      break;\r\n\r\n    case scoreActions.CHECK_GAME_OVER:\r\n      newState.gameOver = scoreState.tableCardsCount < 2; // If 1 or fewer cards, no chance for a match so game over\r\n\r\n      if (!newState.gameOver) { // If enough cards, then check for matches\r\n        let foundAvailableMatch = false;\r\n\r\n        const tableCardsLength = scoreState.tableCards.length;\r\n        for (let idx1 = 0; idx1 < tableCardsLength && !foundAvailableMatch; idx1++) {\r\n          const card1 = scoreState.tableCards[idx1];\r\n          if (!card1) continue;\r\n\r\n          for (let idx2 = idx1 + 1; idx2 < tableCardsLength && !foundAvailableMatch; idx2++) {\r\n            const card2 = scoreState.tableCards[idx2];\r\n            if (!card2) continue;\r\n\r\n            console.log(\"CHECK_GAME_OVER: card1: \");\r\n            console.log(card1);\r\n\r\n            console.log(\"CHECK_GAME_OVER: card2: \");\r\n            console.log(card2);\r\n\r\n            const cards = [card1, card2];\r\n            const matchingAttrs = utilities.getMatchingAttrs(cards);\r\n            if (matchingAttrs && matchingAttrs.length > 0) {\r\n              foundAvailableMatch = true; // this will cause both loops to break\r\n            }\r\n          }\r\n        }\r\n\r\n        newState.gameOver = !foundAvailableMatch;\r\n      }\r\n      break;\r\n\r\n    case scoreActions.CARD_FLIPPED:\r\n      {\r\n        const { cardKey } = action;\r\n        const { tableCards } = scoreState;\r\n        const card = utilities.getCardFromKey(tableCards, cardKey);\r\n        if (card != null) {\r\n          const newTableCards = [...tableCards];\r\n\r\n          const newCard = { ...card, faceDown: !card.faceDown };\r\n          newTableCards[newCard.index] = newCard;\r\n          newState.tableCards = newTableCards;\r\n        }\r\n      }\r\n      break;\r\n\r\n    case scoreActions.CHECK_MATCHES:\r\n      {\r\n        const { tableCards } = action;\r\n        const selectedCards = utilities.getSelectedCards(tableCards);\r\n\r\n        const numSelectedCards = Object.keys(selectedCards).length;\r\n        const matchingAttrs = utilities.getMatchingAttrs(selectedCards);\r\n        const allMatch = (matchingAttrs.length > 0);\r\n        newState.highlight = (allMatch ? \"highlight-match\" : \"highlight-mismatch\");\r\n\r\n        if (allMatch && numSelectedCards > 1) {\r\n          newState.matchingAttrs = matchingAttrs;\r\n        }\r\n        else {\r\n          newState.matchingAttrs = [];\r\n        }\r\n\r\n      }\r\n      break;\r\n\r\n    case scoreActions.UPDATE_SCORE_FROM_MATCHES:\r\n      const { tableCards } = action;\r\n      const selectedCards = utilities.getSelectedCards(tableCards);\r\n      const { matchingAttrs } = scoreState;\r\n      if (matchingAttrs.length > 0) {\r\n        const numSelectedCards = Object.keys(selectedCards).length;\r\n        var possPoints = numSelectedCards * numSelectedCards;\r\n        newState.possPoints = possPoints;\r\n      }\r\n      else {\r\n        newState.possPoints = 0;\r\n      }\r\n      break;\r\n\r\n    case scoreActions.KEEP_SCORE:\r\n      const { activeUserIndex } = scoreState; \r\n      const activeUser = { ...scoreState.userScores[activeUserIndex]};\r\n\r\n      if (typeof (newState.possPoints) !== 'undefined') {\r\n        activeUser.points += scoreState.possPoints;\r\n        activeUser.sets++;\r\n        newState.userScores = [...scoreState.userScores];\r\n        newState.userScores[activeUserIndex] = activeUser;\r\n      }\r\n      newState.activeUserIndex = (activeUserIndex + 1) % 2;\r\n      newState.possPoints = 0;\r\n      newState.matchingAttrs = [];\r\n      newState.highlight = 'none';\r\n      break;\r\n\r\n\r\n    case scoreActions.RESET_FLIPPED_CARDS:\r\n      newState.possPoints = 0;\r\n      newState.matchingAttrs = [];\r\n      newState.tableCards = scoreState.tableCards.map(card => (card ? { ...card, faceDown: true } : null));\r\n      newState.activeUserIndex = (scoreState.activeUserIndex + 1) % 2;\r\n      break;\r\n\r\n    case scoreActions.CLEAR_KEPT_CARDS:\r\n      {\r\n        const { tableCards } = scoreState;\r\n        const selectedCards = utilities.getSelectedCards(tableCards);\r\n        const newTableCards = [...tableCards];\r\n        selectedCards.forEach(card => { newTableCards[card.index] = null });\r\n        newState.tableCards = newTableCards;\r\n      }\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return newState;\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\nimport commonReducer from './commonReducer';\r\nimport scoreReducer from './scoreReducer';\r\n\r\n\r\nconst reducers = {\r\n  common: commonReducer,\r\n  score: scoreReducer,\r\n};\r\n\r\nexport default combineReducers(reducers);\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport DevTools from './DevTools';\r\n\r\n\r\nimport combinedReducers from './actions';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nconst enhancer = compose(\r\n  applyMiddleware(\r\n    thunkMiddleware,\r\n    loggerMiddleware\r\n  ),\r\n  DevTools.instrument(),\r\n);\r\n\r\nexport default function configureStore(initialState) {\r\n  const store = createStore(combinedReducers, initialState, enhancer);\r\n\r\n  return store;\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './App.css';\r\nimport StatusArea from './components/StatusArea';\r\nimport Table from './components/Table';\r\nimport DevTools from './DevTools';\r\nimport configureStore from './store';\r\n\r\nimport { testRemoveBunchOfCardsAndFollowUp  } from './actions/scoreActions';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.store = configureStore();\r\n  }\r\n\r\n/*\r\n\r\n  onClearButtonClick() {\r\n    this.store.dispatch(testRemoveBunchOfCardsAndFollowUp());\r\n  }\r\n\r\n            <button className='ui button negative' tabIndex='0' onClick={this.onClearButtonClick.bind(this)}>\r\n              Clear table\r\n            </button>\r\n\r\n*/\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={this.store}>\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n\r\n\r\n\r\n\r\n            <StatusArea />\r\n          </header>\r\n          <DevTools />\r\n          <Table />\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}